
sbd.ko:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <sbd_getgeo>:
   0:	e8 00 00 00 00       	callq  5 <sbd_getgeo+0x5>
   5:	55                   	push   %rbp
   6:	31 c0                	xor    %eax,%eax
   8:	c6 46 01 10          	movb   $0x10,0x1(%rsi)
   c:	66 89 46 02          	mov    %ax,0x2(%rsi)
  10:	48 c7 46 08 04 00 00 	movq   $0x4,0x8(%rsi)
  17:	00 
  18:	31 c0                	xor    %eax,%eax
  1a:	48 89 e5             	mov    %rsp,%rbp
  1d:	c6 06 04             	movb   $0x4,(%rsi)
  20:	5d                   	pop    %rbp
  21:	c3                   	retq   
  22:	0f 1f 40 00          	nopl   0x0(%rax)
  26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  2d:	00 00 00 

0000000000000030 <sbd_req>:
  30:	e8 00 00 00 00       	callq  35 <sbd_req+0x5>
  35:	55                   	push   %rbp
  36:	48 89 e5             	mov    %rsp,%rbp
  39:	41 54                	push   %r12
  3b:	49 89 fc             	mov    %rdi,%r12
  3e:	53                   	push   %rbx
  3f:	4c 89 e7             	mov    %r12,%rdi
  42:	e8 00 00 00 00       	callq  47 <sbd_req+0x17>
  47:	48 89 c3             	mov    %rax,%rbx
  4a:	48 85 db             	test   %rbx,%rbx
  4d:	0f 84 8f 00 00 00    	je     e2 <sbd_req+0xb2>
  53:	48 8b 4b 48          	mov    0x48(%rbx),%rcx
  57:	48 8b 43 70          	mov    0x70(%rbx),%rax
  5b:	4c 8b 93 08 01 00 00 	mov    0x108(%rbx),%r10
  62:	83 e1 01             	and    $0x1,%ecx
  65:	48 85 c0             	test   %rax,%rax
  68:	0f 84 9a 00 00 00    	je     108 <sbd_req+0xd8>
  6e:	66 83 78 28 00       	cmpw   $0x0,0x28(%rax)
  73:	0f b7 70 2a          	movzwl 0x2a(%rax),%esi
  77:	8b 50 30             	mov    0x30(%rax),%edx
  7a:	74 0e                	je     8a <sbd_req+0x5a>
  7c:	0f b7 d6             	movzwl %si,%edx
  7f:	48 c1 e2 04          	shl    $0x4,%rdx
  83:	48 03 50 70          	add    0x70(%rax),%rdx
  87:	8b 52 08             	mov    0x8(%rdx),%edx
  8a:	c1 fa 09             	sar    $0x9,%edx
  8d:	44 8b 05 00 00 00 00 	mov    0x0(%rip),%r8d        # 94 <sbd_req+0x64>
  94:	4c 8b 0d 00 00 00 00 	mov    0x0(%rip),%r9        # 9b <sbd_req+0x6b>
  9b:	4c 89 c0             	mov    %r8,%rax
  9e:	48 0f af 43 68       	imul   0x68(%rbx),%rax
  a3:	49 0f af d0          	imul   %r8,%rdx
  a7:	4d 63 01             	movslq (%r9),%r8
  aa:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
  ae:	4c 39 c6             	cmp    %r8,%rsi
  b1:	77 59                	ja     10c <sbd_req+0xdc>
  b3:	49 03 41 08          	add    0x8(%r9),%rax
  b7:	48 85 c9             	test   %rcx,%rcx
  ba:	75 3c                	jne    f8 <sbd_req+0xc8>
  bc:	48 89 c6             	mov    %rax,%rsi
  bf:	4c 89 d7             	mov    %r10,%rdi
  c2:	e8 00 00 00 00       	callq  c7 <sbd_req+0x97>
  c7:	31 f6                	xor    %esi,%esi
  c9:	48 89 df             	mov    %rbx,%rdi
  cc:	e8 00 00 00 00       	callq  d1 <sbd_req+0xa1>
  d1:	84 c0                	test   %al,%al
  d3:	0f 84 66 ff ff ff    	je     3f <sbd_req+0xf>
  d9:	48 85 db             	test   %rbx,%rbx
  dc:	0f 85 71 ff ff ff    	jne    53 <sbd_req+0x23>
  e2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  e9:	31 c0                	xor    %eax,%eax
  eb:	e8 00 00 00 00       	callq  f0 <sbd_req+0xc0>
  f0:	5b                   	pop    %rbx
  f1:	41 5c                	pop    %r12
  f3:	5d                   	pop    %rbp
  f4:	c3                   	retq   
  f5:	0f 1f 00             	nopl   (%rax)
  f8:	48 89 c7             	mov    %rax,%rdi
  fb:	4c 89 d6             	mov    %r10,%rsi
  fe:	e8 00 00 00 00       	callq  103 <sbd_req+0xd3>
 103:	eb c2                	jmp    c7 <sbd_req+0x97>
 105:	0f 1f 00             	nopl   (%rax)
 108:	31 d2                	xor    %edx,%edx
 10a:	eb 81                	jmp    8d <sbd_req+0x5d>
 10c:	48 89 c6             	mov    %rax,%rsi
 10f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 116:	31 c0                	xor    %eax,%eax
 118:	e8 00 00 00 00       	callq  11d <sbd_req+0xed>
 11d:	eb a8                	jmp    c7 <sbd_req+0x97>
 11f:	90                   	nop

0000000000000120 <init_module>:
 120:	e8 00 00 00 00       	callq  125 <init_module+0x5>
 125:	55                   	push   %rbp
 126:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 12d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 134:	31 c0                	xor    %eax,%eax
 136:	48 89 e5             	mov    %rsp,%rbp
 139:	53                   	push   %rbx
 13a:	e8 00 00 00 00       	callq  13f <init_module+0x1f>
 13f:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 145 <init_module+0x25>
 145:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 14c <init_module+0x2c>
 14c:	0f af 05 00 00 00 00 	imul   0x0(%rip),%eax        # 153 <init_module+0x33>
 153:	89 02                	mov    %eax,(%rdx)
 155:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 15c <init_module+0x3c>
 15c:	48 63 3b             	movslq (%rbx),%rdi
 15f:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%rbx)
 166:	e8 00 00 00 00       	callq  16b <init_module+0x4b>
 16b:	48 89 43 08          	mov    %rax,0x8(%rbx)
 16f:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 176 <init_module+0x56>
 176:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
 17b:	0f 84 ea 00 00 00    	je     26b <init_module+0x14b>
 181:	48 8d 73 20          	lea    0x20(%rbx),%rsi
 185:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 18c:	e8 00 00 00 00       	callq  191 <init_module+0x71>
 191:	48 89 43 18          	mov    %rax,0x18(%rbx)
 195:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 19c <init_module+0x7c>
 19c:	48 8b 78 18          	mov    0x18(%rax),%rdi
 1a0:	48 85 ff             	test   %rdi,%rdi
 1a3:	0f 84 18 01 00 00    	je     2c1 <init_module+0x1a1>
 1a9:	0f b7 35 00 00 00 00 	movzwl 0x0(%rip),%esi        # 1b0 <init_module+0x90>
 1b0:	e8 00 00 00 00       	callq  1b5 <init_module+0x95>
 1b5:	31 ff                	xor    %edi,%edi
 1b7:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 1be:	e8 00 00 00 00       	callq  1c3 <init_module+0xa3>
 1c3:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 1ca <init_module+0xaa>
 1ca:	bf 10 00 00 00       	mov    $0x10,%edi
 1cf:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 1d5 <init_module+0xb5>
 1d5:	e8 00 00 00 00       	callq  1da <init_module+0xba>
 1da:	48 89 43 10          	mov    %rax,0x10(%rbx)
 1de:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1e5 <init_module+0xc5>
 1e5:	48 8b 40 10          	mov    0x10(%rax),%rax
 1e9:	48 85 c0             	test   %rax,%rax
 1ec:	0f 84 95 00 00 00    	je     287 <init_module+0x167>
 1f2:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 1f8 <init_module+0xd8>
 1f8:	89 10                	mov    %edx,(%rax)
 1fa:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 201 <init_module+0xe1>
 201:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 207 <init_module+0xe7>
 207:	48 8b 40 10          	mov    0x10(%rax),%rax
 20b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 212:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 219 <init_module+0xf9>
 219:	48 8b 50 10          	mov    0x10(%rax),%rdx
 21d:	48 c7 82 58 03 00 00 	movq   $0x0,0x358(%rdx)
 224:	00 00 00 00 
 228:	48 8b 50 10          	mov    0x10(%rax),%rdx
 22c:	48 c7 82 68 03 00 00 	movq   $0x0,0x368(%rdx)
 233:	00 00 00 00 
 237:	48 8b 50 10          	mov    0x10(%rax),%rdx
 23b:	c7 42 0c 73 62 64 30 	movl   $0x30646273,0xc(%rdx)
 242:	c6 42 10 00          	movb   $0x0,0x10(%rdx)
 246:	48 8b 50 10          	mov    0x10(%rax),%rdx
 24a:	48 89 4a 50          	mov    %rcx,0x50(%rdx)
 24e:	48 8b 50 10          	mov    0x10(%rax),%rdx
 252:	48 8b 48 18          	mov    0x18(%rax),%rcx
 256:	48 89 8a 60 03 00 00 	mov    %rcx,0x360(%rdx)
 25d:	48 8b 78 10          	mov    0x10(%rax),%rdi
 261:	e8 00 00 00 00       	callq  266 <init_module+0x146>
 266:	31 c0                	xor    %eax,%eax
 268:	5b                   	pop    %rbx
 269:	5d                   	pop    %rbp
 26a:	c3                   	retq   
 26b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 272:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 279:	31 c0                	xor    %eax,%eax
 27b:	e8 00 00 00 00       	callq  280 <init_module+0x160>
 280:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
 285:	eb e1                	jmp    268 <init_module+0x148>
 287:	be 76 00 00 00       	mov    $0x76,%esi
 28c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 293:	e8 00 00 00 00       	callq  298 <init_module+0x178>
 298:	8b 3d 00 00 00 00    	mov    0x0(%rip),%edi        # 29e <init_module+0x17e>
 29e:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 2a5:	e8 00 00 00 00       	callq  2aa <init_module+0x18a>
 2aa:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2b1 <init_module+0x191>
 2b1:	48 8b 78 08          	mov    0x8(%rax),%rdi
 2b5:	e8 00 00 00 00       	callq  2ba <init_module+0x19a>
 2ba:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
 2bf:	eb a7                	jmp    268 <init_module+0x148>
 2c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 2c8:	31 c0                	xor    %eax,%eax
 2ca:	e8 00 00 00 00       	callq  2cf <init_module+0x1af>
 2cf:	eb d9                	jmp    2aa <init_module+0x18a>
 2d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
 2d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 2dd:	00 00 00 

00000000000002e0 <cleanup_module>:
 2e0:	e8 00 00 00 00       	callq  2e5 <cleanup_module+0x5>
 2e5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2ec <cleanup_module+0xc>
 2ec:	55                   	push   %rbp
 2ed:	48 89 e5             	mov    %rsp,%rbp
 2f0:	48 8b 78 10          	mov    0x10(%rax),%rdi
 2f4:	e8 00 00 00 00       	callq  2f9 <cleanup_module+0x19>
 2f9:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 300 <cleanup_module+0x20>
 300:	48 8b 78 10          	mov    0x10(%rax),%rdi
 304:	e8 00 00 00 00       	callq  309 <cleanup_module+0x29>
 309:	8b 3d 00 00 00 00    	mov    0x0(%rip),%edi        # 30f <cleanup_module+0x2f>
 30f:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 316:	e8 00 00 00 00       	callq  31b <cleanup_module+0x3b>
 31b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 322 <cleanup_module+0x42>
 322:	48 8b 78 18          	mov    0x18(%rax),%rdi
 326:	e8 00 00 00 00       	callq  32b <cleanup_module+0x4b>
 32b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 332 <cleanup_module+0x52>
 332:	48 8b 78 08          	mov    0x8(%rax),%rdi
 336:	e8 00 00 00 00       	callq  33b <cleanup_module+0x5b>
 33b:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 342:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 349:	31 c0                	xor    %eax,%eax
 34b:	e8 00 00 00 00       	callq  350 <cleanup_module+0x70>
 350:	5d                   	pop    %rbp
 351:	c3                   	retq   
